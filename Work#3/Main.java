// Урок 4. Структуры данных дерево и хэш-таблица

// Задание:
// Необходимо преобразовать собранное на семинаре дерево поиска в полноценное левостороннее красно-чёрное дерево. 
// Реализовать метод добавления новых элементов с балансировкой.
// - Красно-чёрное дерево имеет следующие критерии:
// - Каждая нода имеет цвет (красный или черный);
// - Корень дерева всегда черный;
// - Новая нода всегда красная;
// - Красные ноды могут быть только левым дочерним элементом;
// - У красной ноды все дочерние элементы черного цвета.

// Соответственно, чтобы данные условия выполнялись, после добавления элемента в дерево необходимо произвести балансировку, 
//благодаря которой все критерии выше станут валидными.

// Для балансировки существует 3 операции:
// - левый малый поворот
// - правый малый поворот
// - смена цвета.

public class Main 
{
    public static void main(String[] args) 
    {
        // Создание экземпляра класса
        RedBlackTreeV1<Integer> tree = new RedBlackTreeV1<>(); 
       // RedBlackTreeV2 tree = new RedBlackTreeV2(); // Создание экземпляра класса
        RedBlackTree tree = new RedBlackTree(); // Создание экземпляра класса
        
        // Вставка элементов в дерево
        tree.insert(5); 
        tree.insert(3);
        tree.insert(8);


        // Проверка, содержит ли дерево значение true/false
        System.out.println(tree.contains(4)); 
        System.out.println(tree.contains(2));
    }
}
